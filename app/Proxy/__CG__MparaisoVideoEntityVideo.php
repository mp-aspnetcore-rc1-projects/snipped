<?php

namespace DoctrineProxies\__CG__\Mparaiso\Video\Entity;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class Video extends \Mparaiso\Video\Entity\Video implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int) $this->_identifier["id"];
        }
        $this->__load();
        return parent::getId();
    }

    public function __toString()
    {
        $this->__load();
        return parent::__toString();
    }

    public function getDescription()
    {
        $this->__load();
        return parent::getDescription();
    }

    public function setDescription($description)
    {
        $this->__load();
        return parent::setDescription($description);
    }

    public function getPosterUrl()
    {
        $this->__load();
        return parent::getPosterUrl();
    }

    public function setPosterUrl($poster_url)
    {
        $this->__load();
        return parent::setPosterUrl($poster_url);
    }

    public function getLink()
    {
        $this->__load();
        return parent::getLink();
    }

    public function setLink($link)
    {
        $this->__load();
        return parent::setLink($link);
    }

    public function getTitle()
    {
        $this->__load();
        return parent::getTitle();
    }

    public function setTitle($title)
    {
        $this->__load();
        return parent::setTitle($title);
    }

    public function getTags()
    {
        $this->__load();
        return parent::getTags();
    }

    public function setTags($tags)
    {
        $this->__load();
        return parent::setTags($tags);
    }

    public function addTag(\Mparaiso\Video\Entity\Tag $tag)
    {
        $this->__load();
        return parent::addTag($tag);
    }

    public function removeTag(\Mparaiso\Video\Entity\Tag $tag)
    {
        $this->__load();
        return parent::removeTag($tag);
    }

    public function getClient()
    {
        $this->__load();
        return parent::getClient();
    }

    public function setClient($client)
    {
        $this->__load();
        return parent::setClient($client);
    }

    public function getCreated()
    {
        $this->__load();
        return parent::getCreated();
    }

    public function setCreated($created)
    {
        $this->__load();
        return parent::setCreated($created);
    }

    public function getUpdated()
    {
        $this->__load();
        return parent::getUpdated();
    }

    public function setUpdated($updated)
    {
        $this->__load();
        return parent::setUpdated($updated);
    }

    public function prePersist()
    {
        $this->__load();
        return parent::prePersist();
    }

    public function getPlaylistVideos()
    {
        $this->__load();
        return parent::getPlaylistVideos();
    }

    public function setPlaylistVideos($playlistVideos)
    {
        $this->__load();
        return parent::setPlaylistVideos($playlistVideos);
    }

    public function addPlaylistVideo(\Mparaiso\Video\Entity\PlaylistVideo $playlistVideo)
    {
        $this->__load();
        return parent::addPlaylistVideo($playlistVideo);
    }

    public function removePlaylistVideo($playlistVideo)
    {
        $this->__load();
        return parent::removePlaylistVideo($playlistVideo);
    }

    public function getFavorite()
    {
        $this->__load();
        return parent::getFavorite();
    }

    public function setFavorite($favorite)
    {
        $this->__load();
        return parent::setFavorite($favorite);
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'title', 'link', 'poster_url', 'description', 'created', 'updated', 'favorite', 'client', 'tags', 'playlistVideos');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields as $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}